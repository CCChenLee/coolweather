db包用于存放数据库模型的代码（第一阶段）
gson包用于存放GSON模型相关的代码（第三阶段）
service包用于存放服务相关的代码
util包用于存放工具相关的代码（第二阶段）

第一阶段是创建好数据库和表，这样从服务器获取到的数据才能够存储到本地。
为简化数据库的操作，使用LitePal来管理酷欧天气的数据库，
且每个LitePal中的实体类必须继承自DataSupport类。
然后配置assets-litepal.xml的内容，配置LitePalApplication，修改AndroidManifest.xml。

第二阶段是把遍历全国省市县的功能加入，从服务器端获取。
在util包下增加HttpUtil类，再由于服务器返回的省市县数据是JSON格式，在新增一个Utility类解析和处理
开始写界面，由于遍历省市县的功能我们在后面还会复用，故写在碎片里。
新建choose_area.xml布局，新建ChooseAreaFragment继承自Fragment。
声明程序所需要的权限。

第三阶段是查询天气并把天气信息显示出来，借助GSON来对天气进行解析
创建一个总的实例类Weather来引用其余五个实体类

第四阶段是编写天气界面activity_weather.xml，将界面的不同部分卸载不同的布局文件里面，
再通过引入布局的方式集成进去天气界面。title.xml作为头布局，now.xml作为当前天气信息的布局，
forecast.xml作为未来几天天气信息的布局，未来天气信息的子项布局forecast_item.xml，
aqi.xml作为空气质量信息的布局，suggestion.xml作为生活建议信息的布局，然后都引入到activity_weather.xml

第五阶段是编写业务逻辑，将天气显示到界面上。
在Utility类中添加一个用于解析天气JSON数据的handleWeatherResponse()方法
然后接下来在活动中请求天气数据，以及将数据展示到界面上，修改WeatherActivity
从省市县列表界面跳转到天气界面，修改ChooseAreaFragment
还需要在MainActivity中加入一个缓存数据的判断

第五阶段是为了美观界面使用bing背景图接口
修改activity_weather.xml，添加ImageView成为背景图片
修改WeatherActivity
实现背景图和状态栏融合到一起的效果，加入系统版本号的判断大于或等于21即Android5.0以上
让系统状态栏留出空间，修改activity_weather.xml借助android:fitsSystemWindows属性为true

第六阶段